# ESportsMatches Uygulama Analizi

## Uygulama Genel Bakış
Bu uygulama, CS2 E-Spor maçlarını takip etmek için geliştirilmiş modern bir web uygulamasıdır. Aktif, yaklaşan ve geçmiş maçları görüntüleme, favori maçlar ekleme ve maç hatırlatıcıları oluşturma gibi özellikleri içerir.

## Teknoloji Yığını
- **Framework**: Next.js 15
- **UI**: React 19, TailwindCSS
- **Veri Yönetimi**: SWR (stale-while-revalidate)
- **Kimlik Doğrulama**: NextAuth.js
- **Veritabanı**: Supabase
- **E-posta Servisi**: Gmail API
- **Dil**: TypeScript

## Proje Yapısı

### Kök Dizin
- `.next/`: Next.js build çıktıları
- `public/`: Statik dosyalar
- `src/`: Kaynak kodları
- Yapılandırma dosyaları: `next.config.js`, `tailwind.config.js`, `tsconfig.json`, vb.

### Kaynak Kod Yapısı (`src/`)
- `app/`: Next.js App Router yapısı (sayfa ve API endpoint'leri)
- `components/`: Yeniden kullanılabilir UI bileşenleri
- `types/`: TypeScript tipi tanımlamaları
- `services/`: Uygulama servisleri
- `lib/`: Hook'lar ve yardımcı fonksiyonlar
- `utils/`: Yardımcı işlevler
- `hooks/`: React hook'ları

## Ana Özellikler

### Maç Takibi
- Aktif maçları görüntüleme (`/`)
- Yaklaşan maçları görüntüleme (`/upcoming`)
- Geçmiş maçları görüntüleme (`/past`)

### Favori Maçlar
- Favori maçları kaydetme
- Favorilere eklenen maçları görüntüleme (`/favorites`)

### Hatırlatıcılar
- Maç hatırlatıcıları oluşturma
- E-posta bildirimleri gönderme
- Takvim entegrasyonu

### Tema Desteği
- Koyu/Açık tema desteği
- Tema tercihi kaydetme

## Veri Modelleri

### Match
Ana maç verisi modeli, PandaScore API'sinden alınan maç verilerini temsil eder.

## API Entegrasyonları

### PandaScore API
- `GET /api/matches/running`: Aktif maçları getirme
- `GET /api/matches/upcoming`: Yaklaşan maçları getirme
- `GET /api/matches/past`: Geçmiş maçları getirme

### Gmail API
- E-posta bildirimleri gönderme
- Hatırlatıcı e-postaları

### Supabase
- Kullanıcı kimlik doğrulama
- Favori maçları saklama
- Kullanıcı tercihlerini kaydetme

## Bileşen Yapısı

### Sayfa Bileşenleri
- `app/page.tsx`: Ana sayfa (Aktif maçlar)
- `app/upcoming/page.tsx`: Yaklaşan maçlar sayfası
- `app/past/page.tsx`: Geçmiş maçlar sayfası
- `app/favorites/page.tsx`: Favori maçlar sayfası
- `app/auth/*`: Kimlik doğrulama sayfaları

### UI Bileşenleri
- `Header`: Sayfa başlığı ve tema değiştirme
- `TabNavigation`: Sayfalar arası gezinti
- `MatchList`: Maç listesi
- `MatchCard`: Bireysel maç kartı
- `SearchBar`: Maç arama bileşeni
- `ThemeToggle`: Tema değiştirme bileşeni
- `ScrollToTop`: Sayfanın üstüne dönme bileşeni
- `AuthButtons`: Kimlik doğrulama butonları
- `ReminderModal`: Hatırlatıcı oluşturma modalı

## Servisler

### FavoriteService
Favori maçları yönetme servisi.

### GmailService
E-posta bildirimleri gönderme servisi.

## Hook'lar
- `useMatches`: Maç verilerini yöneten hook
- `useAuth`: Kimlik doğrulama durumunu yöneten hook
- `useTheme`: Tema yönetimi hook'u

## Tema Yönetimi
`ThemeContext` bileşeni ile koyu/açık tema tercihi yönetimi.

## Güvenlik
- NextAuth.js ile kimlik doğrulama
- Supabase ile güvenli veri depolama
- API anahtarları için ortam değişkenleri kullanımı

## Performans Optimizasyonları
- SWR ile veri önbellekleme
- Sayfa bazlı kod bölümleme
- Görüntü optimizasyonu
- Lazy loading

## Geliştirme Kuralları

### Kod Stili
- TypeScript strict mode kullanımı
- ESLint ve Prettier ile kod formatı
- Tailwind CSS class isimlendirme kuralları
- Component isimlendirme PascalCase
- Hook isimlendirme camelCase

### Git Commit Mesajları
- feat: Yeni özellik
- fix: Hata düzeltmesi
- docs: Dokümantasyon değişiklikleri
- style: Kod stili değişiklikleri
- refactor: Kod yeniden düzenleme
- test: Test ekleme veya düzenleme
- chore: Genel bakım

### Branch Stratejisi
- main: Ana branch
- develop: Geliştirme branch'i
- feature/*: Yeni özellikler
- bugfix/*: Hata düzeltmeleri
- hotfix/*: Acil düzeltmeler

### Code Review Kuralları
- PR açıklaması zorunlu
- En az bir reviewer onayı
- CI/CD kontrollerinin başarılı olması
- Test coverage kontrolü
- TypeScript tip kontrolü

### Deployment Süreci
- Staging ortamına otomatik deployment
- Production ortamına manuel onay ile deployment
- Her deployment öncesi test suite çalıştırma
- Deployment sonrası smoke test 